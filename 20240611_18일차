2024.06.11

# MyBatis
- 데이터 커넥션 정보를 담당
- 커넥션 풀 (여러개의 섹션 정보를 한번에 담아놓는 공간)
- sql session이 담겨 있는 창고

# 클래스패스
- 컴파일 된 경로
ㄴString resource = "mybatis.xml";
사진 설명을 입력하세요.
# insert.java
- doGet 메소드가 없기 때문에 url에서 검색할 수 없음.
- 항상 create.java에서 실행시켜서 들어올 수 있음
- 주소 입력 방법의 기본 : doGet
- 폼으로 데이터를 전송할 때는 반드시 : Post

Map : 인터페이스
Hash Map : 객체

INSERT INTO user ('name', 'email') // key : 변수명
VALUE (#{name}, #{email}) // value : 값
바로 위 value({...}) 은 마이바티스에서 변수로 데이터를 연결 시켜주기 위한 처리
- 변수이기 때문에 중괄호로 구분하고, #과 $로 표시 할 수 있는데, #은 자료형+값을 가져옴 / $는 value(값) 그대로 가져옴
ㄴ #을 사용해야 오류가 안남!

# ibatis
- 행이 전달됨

# mybatis
- 상태값이 전달됨 (성공 1, 실패 0)
- commit();을 해주어야 최종 실행 및 저장 됨

# get방식이기 때문에 쿼리 스트링으로 전달

# URL 이 아래와 같은 이유
- webServlet (내 테스트 프로젝트) : http://localhost:8080/WebServlet/Create
- git_WebServlet (강사님 프로젝트) : http://localhost:8080/web/Create

각각 WebServlet / web 인 이유는 아래의 설정으로 인해 path를 바꿔줬기 때문!

# forward
- jsp가 자동으로 java코드로 변환되면서 알아서 화면을 그려줌
- url(주소값)은 변경되지 않음
- java코드 안에 직접 모든 코드를 적으려면 힘들기 때문에 화면을 자동으로 변환(그려주는)해주는 jsp를 이용하는 것임
- request 객체의 메소드

# sendRedirect
- url(주소값)이 변경되면서 요청한 화면으로 전환됨
- response 객체의 메소드


# spring
https://spring.io/tools > Spring Tools 4 for Eclipse > 4.22.1 - windows 다운 > ide에 넣고 > cmd > ide 경로까지 잡기 > dir > java -jar spring-tool-suite-4-4.22.1.RELEASE-e4.31.0-win32.win32.x86_64.self-extracting.jar
------------------- 이부분 확인하기

1. 체크박스 체크!
- war 로 선택해야 내 파일 안에 프로젝트 올려두고 실행할 수 있음
사진 설명을 입력하세요.
2.
사진 설명을 입력하세요.
3. dynamic web module 이 체크 되어야만 톰캣에 올릴 수 있다.

등록방법 1 : server runtime 이 등록되어 있어야 servlet을 만들 수 있음

======================================================================================================================================================
[Form.html]

<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>데이터 입력 화면</title>
<link rel="icon" href="<%=request.getContextPath()%>/www/img/logo.png" type="image/x-icon">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
<div class="container mt-3">
	<h1 class="text-center">데이터를 입력하세요</h1>
	<form action="/web/Result" method="post">
		<div class="mb-3 mt-3">
			<label for="cnt" class="form-label">회전수 :</label>
			<input type="number" class="form-control" id="cnt" name="cnt" value="0">
		</div>
		<div class="mb-3 mt-3">
			<label for="txt" class="form-label">내용 :</label>
			<input type="text" class="form-control" id="txt" name="txt" placeholder="내용을 입력하세요." required="required" autocomplete="off">
		</div>
		<div class="d-grid gap-3">
			<input type="submit" value="전송" class="btn btn-primary btn-block">
		</div>
	</form>
</div>
</body>
</html>
======================================================================================================================================================
[Result.java]

package web;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/Result")
public class Result extends HttpServlet {

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		req.setCharacterEncoding("UTF-8"); // 한글깨짐 방지(필터처리가 없어서 직접 넣어줘야함)
		resp.setCharacterEncoding("UTF-8");
		resp.setContentType("text/html; charset=utf-8");
		String cnt = req.getParameter("cnt");
		String txt = req.getParameter("txt");
		System.out.println(cnt + "," + txt);
		print(req, resp, cnt, txt);
	}
	
	private void print(HttpServletRequest req, HttpServletResponse resp, String cnt, String txt) throws ServletException, IOException {
		
		String html = "<!DOCTYPE html>\n"
		+ "<html>\n"
		+ "<head>\n"
		+ "<meta charset=\"UTF-8\">\n"
		+ "<title>데이터 출력 화면</title>\n"
		+ "<link rel=\"icon\" href=\"<%=request.getContextPath()%>/www/img/logo.png\" type=\"image/x-icon\">\n"
		+ "<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n"
		+ "</head>\n"
		+ "<body>\n"
		+ "<div class=\"container mt-3\">\n"
		+ "	<div class=\"d-grid gap-3\">\n"
		+ "		<a href=\"Form\" class=\"btn btn-success btn-block\">돌아가기</a>\n"
		+ "	</div>\n"
		+ "	<h1 class=\"text-center mt-3\">입력한 결과</h1>\n"
		+ "	<ol class=\"list-group list-group-numbered\">\n";
		
		// 반복문 적용 하는 곳
		int c = Integer.parseInt(cnt); // 형변환 (자료형 변경)
		if(c == 0) {
			html += "<li class=\"list-group-item\">입력 받은 값이 없습니다</li>\n";
		} else {
			for(int i=0; i<c; i++) {
				html += "<li class=\"list-group-item\">" + txt + "</li>\n";
			}
		}
		// 반복문 끝
		
		html += "</ol>\n"
		+ "</div>\n"
		+ "</body>\n"
		+ "</html>";
		
		System.out.println(html); // 위 html 코드가 정상적으로 입력되었는지 확인하는 코드
		resp.getWriter().append(html); // 화면에 출력
	}

}


========================================================================================================================



