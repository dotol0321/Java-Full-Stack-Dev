2024.05.21
# 디스코드 주소
https://discord.com/invite/yjQ27EK5XD
Discord에서 스프링교육 커뮤니티를 확인하세요. 6명과 어울리며 무료 음성 및 텍스트 채팅을 즐기세요.
discord.com


<정리>
# 배열
- 연관된 데이터를 모아서 관리하기 위해 사용하는 데이터 유형
- 같은 자료형 데이터의 묶음
- 기본형 배열 / 참조형 배열

ex)
ArrayList 참조배열 = new ArrayList();
- new키워드가 있을 때는 참조형 자료 구조를 생성했다는 뜻
★ 힙 메모리 주소값 / 데이터가 저장된 주소값

# 반복문
for( ){
}
while( ){
}
do{
} while( );

ex) 구구단
- for와 while문을 이용한 구구단 만들기
for(int 단=1; 단<10; i++){

}

int 단2 = 1;
while(단2 < 10){
  단2++;
}
package java0521;

public class Study01 {

	public static void main(String[] args) {
		// 구구단 만들기
		int 단=1;
		while(단<10) {
			for(int 증가값=1; 증가값<10; 증가값++) {
				System.out.println(단 + " x " + 증가값 + " = " + (단*증가값));
			}
			단++;
			System.out.println();
		}
	}
}
package java0521;

public class Study02 {

	public static void main(String[] args) {
		int[] 배열 = new int[10];
		
		for(int i = 0; i < 배열.length; i++) {
			배열[i] = i;
		}
		
		/***********************************************
		 * 문제1) 인덱스와 값을 곱하여 다시 배열에 값넣기
		 * 출력 예시)
		 * 인덱스		초기값	곱셈할값		배열에들어갈 값
		 * 0		0		9			(0 * 9) = 0
		 * 1		1		8			(1 * 8) = 8
		 * 2		2		7			(2 * 7) = 14
		 * 3		3		6			(3 * 6) = 18
		 * 4		4		5			(4 * 5) = 20
		 * 5		5		4			(5 * 4) = 20
		 * 6		6		3			(6 * 3) = 18
		 * 7		7		2			(7 * 2) = 14
		 * 8		8		1			(8 * 1) = 8
		 * 9		9		0			(9 * 0) = 0
		 ************************************************/
		/*
		// 2단계 - 곱셈할 값 정의
		int 대상자 = 9;
		
		for(int i = 0; i < 배열.length; i++) {
			// 1단계 - 배열에서 해당 위치에 들어 있는 값 확인
			//System.out.println("인덱스: " + i + ", 초기값 : " + 배열[i]);
			
			// 3단계 - 배열에 들어갈 값 정의
			int 값 = (i * 대상자);
			//System.out.println(i +" * " + 대상자 + " = " + 값);
			배열[i] = 값;
			대상자--;
		}
		
		// 4단계 - 배열에 담겨 있는 값 확인
		for(int i = 0; i < 배열.length; i++) {
			System.out.println( 배열[i] );
		}
		*/
		
		// 내 답===========================================================
		for(int i=0; i<배열.length; i++) {
			배열[i] = i*((배열.length-i)-1);
			System.out.println(배열[i]);
		}
	}
}

# 배열의 length
.length
- new로 배열을 만들 때(new int[10]) 생성되는 상수라고 볼 수 있음
- 정수형의 default 값 : 0
package java0521;

public class Study04 {

	public static void main(String[] args) {
		
		/***********************************************
		 * 문제2) 배열 크기가 10이고 초기의값의 아래와 같다.
		 *      연산할 값은 9로 고정으로 사용하여 배열에 빼기 연산으로
		 *      다시 넣으시오.
		 * 출력 예시)
		 * 인덱스		초기값	연산할값		배열에들어갈 값
		 * 0		9		9			(9 - 9)
		 * 1		8		9			(8 - 9)
		 * 2		7		9			(7 - 9)
		 * 3		6		9			(6 - 9)
		 * 4		5		9			(5 - 9)
		 * 5		4		9			(4 - 9)
		 * 6		3		9			(3 - 9)
		 * 7		2		9			(2 - 9)
		 * 8		1		9			(1 - 9)
		 * 9		0		9			(0 - 9)
		 ************************************************/
		
		int 배열[] = new int[10];
		int 대상자 = 9;
		
		for(int i=0; i<배열.length; i++) {	
			int 초기값 = (배열.length-i);
			초기값--;
			배열[i] = 초기값-대상자;
			System.out.println(배열[i]);
			
		}
		/*
		
		for(int i=0; i<배열.length; i++) {
			배열[i] = ((배열.length-i)-1) - 대상자;
			System.out.println(배열[i]);
		}
		*/
		
//		System.out.println(배열.length - i);
	}
}
printf("%2d ", 배열[i][j]);
유형 값


# Test
package java0521;

public class Study05 {
	public static void main(String[] args) {
		/***********************************************
		 * 문제3) [3행, 3열] 문자열 2차원 배열를 생성 후 
		 *   인덱스 [0행 0열] 부터 [2행 2열] 까지 차례대로 출력하시오.
		 * 출력 예시)
		 * (0, 0)(0, 1)(0, 2)
		 * (1, 0)(1, 1)(1, 2)
		 * (2, 0)(2, 1)(2, 2)
		 ************************************************/
		
		// 해결 코드 작성 시작
		/*
		int[][] arr = new int[3][3];
		
		for(int i=0; i<arr.length; i++) {
			for(int j=0; j<arr[i].length; j++) {
				System.out.print("(" + i + ", " + j + ")");
			}
			System.out.println();
		}
		*/
		
		// 쌤 답
		String[][] arr = new String[3][3];
		
		for(int i=0; i<arr.length; i++) {
			for(int j=0; j<arr[i].length; j++) {
				String value = "(" + i + ", " + j + ")"; 
				System.out.print(value);
			}
			System.out.println();
		}		
	}
}

package java0521;

public class Study06 {
	public static void main(String[] args) {		
		/***********************************************
		 * 문제4) [4행 4열] 정수형 2차원 배열을 생성 후
		 *  인덱스 순서대로 1 ~ 16의 값을 넣고 출력 하시오.
		 * 출력 예시)
		 *  1,  2,  3,  4
		 *  5,  6,  7,  8
		 *  9, 10, 11, 12
		 * 13, 14, 15, 16
		 ************************************************/
		
		// 해결 코드 작성 시작
		
		int[][] arr = new int[4][4];
		int a = 1;
		for(int i=0; i<arr.length; i++) {
			for(int j=0; j<arr[i].length; j++) {
				arr[i][j] = a;				
				a++;
				System.out.print(arr[i][j] + ", ");
			}
			System.out.println();
		}
		
		/*
		// 쌤 답
		// 배열 생성
		int[][] 배열 = new int[4][4];
		
		// 배열에 값 넣기
		int 증가값 = 1;
		for(int i=0; i<배열.length; i++) {
			for(int j=0; j<배열[i].length; j++) {
				배열[i][j] = 증가값;
				증가값++;
			}
		}
		
		// 검증
		for(int i=0; i<배열.length; i++) {
			for(int j=0; j<배열[i].length; j++) {
				int 값 = 배열[i][j];
				System.out.print(값 + "," + "\t");
			}
			System.out.println("");
		}
		*/
	}
}

package java0521;

public class Study07 {
	public static void main(String[] args) {
		/***********************************************
		 * 문제5) [4행 4열] 정수형 2차원 배열을 생성 후
		 *  인덱스 순서대로 16 ~ 1의 값을 넣고 출력 하시오.
		 * 출력 예시)
		 * 16, 15, 14, 13
		 * 12, 11, 10,  9
		 *  8,  7,  6,  5
		 *  4,  3,  2,  1
		 ************************************************/
		
		// 해결 코드 작성 시작
		int[][] arr = new int[4][4];
		int a = 16;
		for(int i=0; i<arr.length; i++) {
			for(int j=0; j<arr[i].length; j++) {
				arr[i][j] = a;				
				a--;
				System.out.print(arr[i][j] + ", ");
			}
			System.out.println();
		}
		
		/*
		// 쌤 답
		// 배열 생성
		int[][] 배열 = new int[4][4];
		
		// 배열에 값 넣기
		int 감소값 = 16;
		for(int i=0; i<배열.length; i++) {
			for(int j=0; j<배열[i].length; j++) {
				배열[i][j] = 감소값;
				감소값--;
			}
		}
		
		// 검증
		for(int i=0; i<배열.length; i++) {
			for(int j=0; j<배열[i].length; j++) {
				int 값 = 배열[i][j];
				System.out.print(값 + "," + "\t");
			}
			System.out.println("");
		}
		*/
	}
}

package java0521;

public class Study08 {
	public static void main(String[] args) {
		/***********************************************
		 * 문제6) [3행 5열] 2차원 배열을 이용하여 출력하시오.
		 * 단, 주어진 데이터를 이용 하기
		 * 단, 아래의 참조 코드를 이용하여 "값 사이는 3칸 공백", "값은 2칸으로 오른쪽 맞춤" 출력
		 *  >> 참조 코드 : System.out.printf("%2d   ", 배열[행][열]);
		 * 출력 예시)
		 *  5    8   10    6    4
		 * 11   20    1    3    2
		 *  7    9   14   22    3 
		 ************************************************/
		
		// 주어진 데이터 배열값		
		int[][] 배열 = new int[][]{
			{ 5,  8, 10,  6, 4},
			{11, 20,  1,  3, 2},
			{ 7,  9, 14, 22, 3}
		};
		
		// 해결 코드 작성 시작(쌤답과 동일)
		for(int i=0; i<배열.length; i++) {
			for(int j=0; j<배열[i].length; j++) {
				System.out.printf("%2d   ", 배열[i][j]);
			}
			System.out.println();
		}			
	}
}

package java0521;

public class Study09 {
	public static void main(String[] args) {
		/***********************************************
		 * 문제7) [5행 5열] 2차원 배열을 이용하여
		 *  파스칼삼각형을 출력하는 프로그램 만들기
		 *  첫번째 행, 첫번째 열은 1로 시작으로 (고정) (빈 곳은 0이 있다고 생각하기!!)
		 *  두번째 행 부터 "바로 위 값"과 "바로위 왼쪽의 값"을 더한 값으로 출력 하세요.
		 * 출력 예시)        ┌───────────────────────처리 방법 예시───────────────────────┐
		 * 1				<< 첫번째 열은 1로 시작
		 * 1, 1				<< 1번 열은 (0,0)값, 2번 열은 (0,1) + (0,0) 합값
		 * 1, 2, 1			<< 1번 열은 (1,0)값, 2번 열은 (1,1) + (1,0) 합값, 3번 열은 (1,1) + (1,2) 합값
		 * 1, 3, 3, 1		<< 동일
		 * 1, 4, 6, 4, 1	<< 동일
		 ************************************************/
		int[][] arr = new int[5][5];
		arr[0][0] = 1;
		
		for(int i=1; i<arr.length; i++) {
			arr[i][0] = 1;
			for(int j=1; j<arr[i].length; j++) {
				int 값 = (arr[i-1][j] + arr[i-1][j-1]);
				arr[i][j]=값;
			}
		}
		for(int i=0; i<arr.length; i++) {
			for(int j=0; j<arr[i].length; j++) {
				if(arr[i][j] == 0) {
					continue;
				}
				System.out.print(arr[i][j] + ", ");
			}
			System.out.println();
		}	
				
		/*
		// 해결 코드 작성 시작 (쌤 답)
		int[][] 배열 = new int[5][5];
		int 초기값 = 1; // 첫번째 행,열은 1로 시작 (고정)
		배열[0][0] = 초기값; // 첫번째 행,열은 1로 시작 >> (0,0)=1
		
		for(int i=1; i<배열.length; i++) { // 두번째 행부터 for문 돌리면 되니깐 i=1
			배열[i][0] = 초기값; // (1,0), (2,0), (3,0), (4,0)은 1로 고정됨
			for(int j=1; j<배열[i].length; j++) { // 첫번재 열은 왼쪽 값이 없어서 1로 고정할 수 있음
				int 값 = (배열[i-1][j] + 배열[i-1][j-1]); // 바로 위 값과 바로 위 왼쪽 값을 가져오기 위해 -1 / 
				배열[i][j] = 값;
			}
		}
		
		for(int i=0; i<배열.length; i++) {
			for(int j=0; j<배열[i].length; j++) {
				if(배열[i][j] == 0) continue; // 0일 때 건너뜀(0 제거)				
				System.out.print(배열[i][j] + "\t");
			}
			System.out.println();
		}
		*/
	}
}

