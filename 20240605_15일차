2024.06.05 (수)

# Docker
- 도커 계정 : 구글 계정으로 연동해야 문제가 적어지다함.
- 도커 로그인 후 > cmd > maria db 위치로 설정 (maria db가 바탕화면에 있으면 cd C:\Users\hi\Desktop\mariadb 입력) > docker-compose up 입력 하면 도커에 db가 설치됨
- 도커에서 실행(start) 버튼 클릭하면 db에 연결됨 (도커에서 연결을 켜고 끌 수 있음) - 포트번호 확인!
- heidiSQL에서 세션 연결되면 끝

# name
화면에 받을 수 있는 값이 담겨 있는 키

# Get 방식
- 주소창에 파라미터를 노출시켜 쿼리스트링에 전달하여 header에 담아 전달하는 방식
ex) Result?cnt=0&txt=%EC%95%88%EB%85%95
- cnt에 0이 담겼고, txt에 %EC%95%88%EB%85%95 이 담김(안녕이라는 텍스트를 파라미터로 보내면 바뀜)

# Post 방식
- 주소창에 파라미터를 노출시키지 않고 Form data에 전달하여 body에 담아 전달하는 방식

# form action과 webServlet의 패스가 같아야함


[Form.jsp]

<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>JSP 화면</title>
<link rel="icon" href="<%=request.getContextPath()%>/www/img/logo.png" type="image/x-icon">
<link href="<%=request.getContextPath()%>/www/lib/bootstrap@5.2.3/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
<div class="container mt-3">
	<h1 class="text-center">데이터를 입력하세요</h1>
	<form action="/WebServlet/Result" method="get"><!-- action: 주소값, method: 통신방법 -->
		<div class="mb-3 mt-3">
			<label for="cnt" class="form-label">회전수 :</label>
			<input type="number" class="form-control" id="cnt" name="cnt" value="0">
		</div>
		<div class="mb-3 mt-3">
			<label for="txt" class="form-label">내용 :</label>
			<input type="text" class="form-control" id="txt" name="txt" placeholder="내용을 입력하세요." required="required" autocomplete="off">
		</div>
		<div class="d-grid gap-3">
			<input type="submit" value="전송" class="btn btn-primary btn-block">
		</div>
	</form>
</div>
</body>
</html>

- submit 을 클릭하면 action이라는 이벤트가 발생함

================================================================================================================================================

[result.jsp]

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/Result")
public class Result extends HttpServlet {
 
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		System.out.println("이동");
		String cnt = request.getParameter("cnt");
		String txt = request.getParameter("txt");
		System.out.println(cnt + ", " + txt);
	}
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
//		System.out.println("Post이동");
	}

}

================================================================================================================================================
# Get 방식
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>JSP 화면</title>
<link rel="icon" href="<%=request.getContextPath()%>/www/img/logo.png" type="image/x-icon">
<link href="<%=request.getContextPath()%>/www/lib/bootstrap@5.2.3/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
<div class="container mt-3">
	<h1 class="text-center">데이터를 입력하세요</h1>
	<form action="/WebServlet/Result" method="get"><!-- action: 주소값, method: 통신방법 -->
		<div class="mb-3 mt-3">
			<label for="cnt" class="form-label">회전수 :</label>
			<input type="number" class="form-control" id="cnt" name="cnt" value="0">
		</div>
		<div class="mb-3 mt-3">
			<label for="txt" class="form-label">내용 :</label>
			<input type="text" class="form-control" id="txt" name="txt" placeholder="내용을 입력하세요." required="required" autocomplete="off">
		</div>
		<div class="d-grid gap-3">
			<input type="submit" value="전송" class="btn btn-primary btn-block">
		</div>
	</form>
</div>
</body>
</html>

================================================================================================================================================

import java.io.IOException;
import java.io.PrintStream;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/Result")
public class Result extends HttpServlet {
 
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=UTF-8");
		System.out.println("이동");
		int cnt = Integer.parseInt(request.getParameter("cnt")); // 문자열 cnt를 정수형으로 받기 위해 형변환 하고 정수형 변수로 받음
		String txt = request.getParameter("txt");
		PrintWriter pw = response.getWriter();
		for(int i=0; i<cnt; i++) {
			System.out.println(cnt + ", " + txt);
			pw.append((i+1) + ". " + txt + " ");
		}
		
	}
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
//		System.out.println("Post이동");
	}

}

================================================================================================================================================

# Post 방식
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>JSP 화면</title>
<link rel="icon" href="<%=request.getContextPath()%>/www/img/logo.png" type="image/x-icon">
<link href="<%=request.getContextPath()%>/www/lib/bootstrap@5.2.3/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
<div class="container mt-3">
	<h1 class="text-center">데이터를 입력하세요</h1>
	<form action="/WebServlet/Result" method="post"><!-- action: 주소값, method: 통신방법 -->
		<div class="mb-3 mt-3">
			<label for="cnt" class="form-label">회전수 :</label>
			<input type="number" class="form-control" id="cnt" name="cnt" value="0">
		</div>
		<div class="mb-3 mt-3">
			<label for="txt" class="form-label">내용 :</label>
			<input type="text" class="form-control" id="txt" name="txt" placeholder="내용을 입력하세요." required="required" autocomplete="off">
		</div>
		<div class="d-grid gap-3">
			<input type="submit" value="전송" class="btn btn-primary btn-block">
		</div>
	</form>
</div>
</body>
</html>

================================================================================================================================================

import java.io.IOException;
import java.io.PrintStream;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/Result")
public class Result extends HttpServlet {
 
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=UTF-8");
		System.out.println("이동");
		int cnt = Integer.parseInt(request.getParameter("cnt")); // 문자열 cnt를 정수형으로 받기 위해 형변환 하고 정수형 변수로 받음
		String txt = request.getParameter("txt");
		PrintWriter pw = response.getWriter();
		for(int i=0; i<cnt; i++) {
			System.out.println(cnt + ", " + txt);
			pw.append((i+1) + ". " + txt + " ");
		}
		
	}
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8"); // 받아올 때의 한글 깨짐 해결
		response.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=UTF-8");
		System.out.println("이동");
		int cnt = Integer.parseInt(request.getParameter("cnt")); // 문자열 cnt를 정수형으로 받기 위해 형변환 하고 정수형 변수로 받음
		String txt = request.getParameter("txt");
		PrintWriter pw = response.getWriter();
		for(int i=0; i<cnt; i++) {
			System.out.println(cnt + ", " + txt);
			pw.append((i+1) + ". " + txt + " ");
		}
	}

}

================================================================================================================================================

# 문자 바이트
- 영문 : 2바이트
- 한글 : 4바이트

# 반복되는 코드
1. 메소드를 사용하여 기능으로 분리하는 방법 ( 클래스 내에서만 사용 가능)

================================================================================================================================================

import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/Result")
public class Result extends HttpServlet {
 
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		Util.ko(request, response); // 공통코드;
		System.out.println("이동");
		int cnt = Integer.parseInt(request.getParameter("cnt")); // 문자열 cnt를 정수형으로 받기 위해 형변환 하고 정수형 변수로 받음
		String txt = request.getParameter("txt");
		PrintWriter pw = response.getWriter();
		for(int i=0; i<cnt; i++) {
			System.out.println(cnt + ", " + txt);
			pw.append((i+1) + ". " + txt + " ");		
		}
	}
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		Util.ko(request, response); // 공통코드;
		System.out.println("이동");
		int cnt = Integer.parseInt(request.getParameter("cnt")); // 문자열 cnt를 정수형으로 받기 위해 형변환 하고 정수형 변수로 받음
		String txt = request.getParameter("txt");
		PrintWriter pw = response.getWriter();
		for(int i=0; i<cnt; i++) {
			System.out.println(cnt + ", " + txt);
			pw.append((i+1) + ". " + txt + " ");
		}
	}	

}

================================================================================================================================================

2. 클래스로 분리하여 메모리에 올려두고 사용 (static 처리)

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class Util {
	// 공통 코드를 메소드로 만들어 모두 사용할 수 있게 메모리에 올려둠(static)
	public static void ko(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8"); // 받아올 때의 한글 깨짐 해결
		response.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=UTF-8");
	}
}

import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/Result")
public class Result extends HttpServlet {
 
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		Util.ko(request, response); // 공통코드
		System.out.println("이동");
		int cnt = Integer.parseInt(request.getParameter("cnt")); // 문자열 cnt를 정수형으로 받기 위해 형변환 하고 정수형 변수로 받음
		String txt = request.getParameter("txt");
		PrintWriter pw = response.getWriter();
		for(int i=0; i<cnt; i++) {
			System.out.println(cnt + ", " + txt);
			pw.append((i+1) + ". " + txt + " ");
		}		
	}
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		Util.ko(request, response); // 공통코드
		System.out.println("이동");
		int cnt = Integer.parseInt(request.getParameter("cnt")); // 문자열 cnt를 정수형으로 받기 위해 형변환 하고 정수형 변수로 받음
		String txt = request.getParameter("txt");
		PrintWriter pw = response.getWriter();
		for(int i=0; i<cnt; i++) {
			System.out.println(cnt + ", " + txt);
			pw.append((i+1) + ". " + txt + " ");
		}
	}
	
}


# Filter
- 필터는 브라우저와 서블릿 사이에서 '어떠한 가로채는 행위'를 하는 것
=> Filter라는 interface를 implement(상속) 해주고, 이 곳에 처리할 코드를 넣으면 이 코드를 실행 함(가로채는 행위)
- 가로채는 행위에는 보통 한글 깨짐 처리 등의 공통적으로 실행해야 될 부분을 처리해줄 수 있음.
- web.xml 에 등록을 해주어야 공통으로 사용 가능


[web.xml]

<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  <display-name>WebServlet</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
  <servlet>
  	<servlet-name>Page1</servlet-name>
  	<servlet-class>Page1</servlet-class>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>Page1</servlet-name>
  	<url-pattern>/page1</url-pattern>
  </servlet-mapping>
  
  <filter>
  	<filter-name>ServletFilter</filter-name>
  	<filter-class>ServletFilter</filter-class>
  </filter>
  
  <filter-mapping>
  	<filter-name>ServletFilter</filter-name>
  	<url-pattern>/*</url-pattern> <!-- /* : 프로젝트 내에서 모두 사용할 수 있도록 하는 설정-->
  </filter-mapping>
  
</web-app>



# 필터를 이용한 한글처리

import java.io.IOException;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

public class ServletFilter implements Filter { // 인터페이스형 상속
	// web.xml에 등록해 줘야함
	@Override
	public void doFilter(ServletRequest req, ServletResponse res, FilterChain chain) 
			throws IOException, ServletException {
		System.out.println("필터");
		req.setCharacterEncoding("UTF-8"); // 브라우저에서 받아올 때의 한글 깨짐 해결
		res.setCharacterEncoding("UTF-8"); // 서블릿에서 브라우저로 줄 때 한글 깨짐 해결
		res.setContentType("text/html; charset=UTF-8"); // 서블릿에서 브라우저로 줄 때 한글 깨짐 해결
		chain.doFilter(req, res); // 필터처리한 다음 서블릿으로 가라는 메소드(원래 나오던 화면 출력 해줌)
	}
	
}

# chain.doFilter(req, res);
ㄴ필터 처리한 후 그 다음 서블릿으로 가라고 명령하는 메소드(form 화면 출력 해줌)
ㄴ 이 코드를 넣지 않으면 필터 처리까지만 하고 그 다음은 실행하지 않음
(위 코드 기준으로 보면 form 화면은 출력하지 않음)

import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/Result")
public class Result extends HttpServlet {
 
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		System.out.println("이동");
		int cnt = Integer.parseInt(request.getParameter("cnt")); // 문자열 cnt를 정수형으로 받기 위해 형변환 하고 정수형 변수로 받음
		String txt = request.getParameter("txt");
		PrintWriter pw = response.getWriter();
		for(int i=0; i<cnt; i++) {
			System.out.println(cnt + ", " + txt);
			pw.append((i+1) + ". " + txt + " ");
		
		}
	}
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		System.out.println("이동");
		int cnt = Integer.parseInt(request.getParameter("cnt")); // 문자열 cnt를 정수형으로 받기 위해 형변환 하고 정수형 변수로 받음
		String txt = request.getParameter("txt");
		PrintWriter pw = response.getWriter();
		for(int i=0; i<cnt; i++) {
			System.out.println(cnt + ", " + txt);
			pw.append((i+1) + ". " + txt + " ");
		}
	}
	
}


