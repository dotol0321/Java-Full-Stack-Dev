2024.05.20

# 순서도 (Flow Chart)
http://www.flowgorithm.org/
사진 설명을 입력하세요.


# 반복문 for문
package java0520;

/**************************
 * >> 반복문
 * for : for( ; ; ){}
 * ********************** */
public class Study01 {

	public static void main(String[] args) {
		/*
		for(;;) { // 무한반복
			System.out.println("반복문");
		}
		*/
		
		/*
		for(;;) { // break : 한번만 출력하고 멈춤, continue : 건너뜀
			System.out.println("반복문");
			break;
		}
		*/
		
		// 전역변수 : class내에서 사용
		// 지역변수 : for문에서만 사용
		int tot = 0;
		for(int i=1; i<=10; i++) {
			System.out.println("전: " + i);
//			i += i; // 누적합산이 아닌 하나씩 건너뛴 합산이 됨(i값 : 전1 > 후2 > 전3 > 후6 > 전7 > 후14)
			tot += i; // i값 누적 합산
			System.out.println("후: " + i);
		}
		System.out.println("반복문의 합 : " + tot);
//		System.out.println("i의 값 : " + i); // 반복문이 끝나면 i값은 11이 됨
	}

}

<출력>
전: 1
후: 1
전: 2
후: 2
전: 3
후: 3
전: 4
후: 4
전: 5
후: 5
전: 6
후: 6
전: 7
후: 7
전: 8
후: 8
전: 9
후: 9
전: 10
후: 10
반복문의 합 : 55


# 반복문 연습!
https://github.com/vignekim/java/tree/master/src/kr/book/iteration

package java0520;

public class Study02 {

	public static void main(String[] args) {
		
		// 구구단
		// 단 * 증가값 = 결과값
		// 문제1) 짝수 단수만 출력
		// 답1
		/*
		for(int 단=1; 단<=9; 단++) { // 단을 위한 반복문 (1~9)
			
			if(단%2 == 0) {
				for(int 증가값 = 1; 증가값<=9; 증가값++) { // 증가값을 위한 반복문 (1~9)
					// 출력하는 곳
					System.out.println(단 + " x " + 증가값 + " = " + (단*증가값));
				}
			}
			
		}
		*/
		
		/*
		// 문제1) 짝수 단수만 출력
		// 답2
		for(int 단=1; 단<=9; 단++) { // 단을 위한 반복문 (1~9)
			
			if(단%2 == 1) continue;
			
			for(int 증가값 = 1; 증가값<=9; 증가값++) { // 증가값을 위한 반복문 (1~9)
				// 출력하는 곳
				System.out.println(단 + " x " + 증가값 + " = " + (단*증가값));
			}
			
		}
		*/
		
		/*
		// 문제2) 한줄에 단수를 9개 출력
		// 답)
		for(int 단=1; 단<=9; 단++) {
			for(int 증가값=1; 증가값<=9; 증가값++) {
				System.out.print(증가값 + " x " + 단 + " = " + (단*증가값) + "\t");
			}
			System.out.println("");
		}
		*/
				
		
		// 문제2) 한줄에 단수를 3개 출력 
		// 답)
		for(int 단=1; 단<=9; 단+=3) { // 3단계식 위한 반복문
			for(int 증가값 = 1; 증가값<=9; 증가값++) {
				System.out.print(단 + "x" + 증가값 + "=" + (단*증가값) + "\t");
				int a = 단+1;
				int b = a+1;
				System.out.print(a + "x" + 증가값 + "=" + (a*증가값) + "\t");
				System.out.println(b + "x" + 증가값 + "=" + (b*증가값));
			}
			System.out.println("");
		}
		
		
		/*
		// 문제3) 증가될 단수를 제어하세요.(심화문제ㅠㅠ)
		int step = 3; // step >> 1, 4
		for(int 단=1; 단<=9; 단+=step) { // 3단계식 위한 반복문
			for(int 증가값 = 1; 증가값<=9; 증가값++) {				
				// step >> 1, 4, 7
				// s >> 1, 2, 3 >> 4, 5, 6 >> 7, 8, 9
				for(int s=단; s<(단+step); s++) {
					System.out.print(s + " x " + 증가값 + " = " + (s*증가값) + "\t");
				}
				System.out.println();
			}
			System.out.println();
		}
		*/
	}
	
}

# 반복문 while문 & do while문
package java0520;
/**************************
 * >> 반복문
 * while : while(){}
 * do{} while();
 * **************************/
public class Study03 {
	public static void main(String[] args) {
		/*int s = 0;
		int a = 4;
		while(true) { // true : 무한반복
			System.out.print(s + "\t");
			System.out.print(a + "\t");
			System.out.println(s >= a);			
			if(s >= a) break; // 검사 횟수 (참일 때만 브레이크)
			System.out.println("반복문");
			s++;
		}
		*/
		
		int s = 0;
		int a = 4;
		while(s < a) {
//			System.out.print(s + "\t");
//			System.out.print(a + "\t");
//			System.out.println(s >= a);			
//			System.out.println("반복문");
			s++;
		}
		
		/*
		do {
			System.out.println("반복문"); // 먼저 출력하고
		} while(true); // 조건에 맞으면 계속 반복 실행
		*/
		
		do {
			System.out.println("반복문"); // 먼저 출력하고
		} while(a < s); // 조건이 참이면 반복 실행
		
	}
}
# 1차원 배열
사진 설명을 입력하세요.
배열을 사용하는데, 담을 수 있는 공간을 넘어서서 나는 오류(없는 공간에서 값을 가져오라고 하니까 오류!)
package java0520;
/******************************
 *  변수명[인덱스] = 값;
 *  인덱스는 0부터 시작
 *  배열 : 참조형
 *********************************/
public class Study04 {
	public static void main(String[] args) {
		
		int[] 정수형배열 = new int[8];
		정수형배열[2] = 5;
		/*
		for(int i=0; i<정수형배열.length; i++) {
			System.out.println(정수형배열[i]);
		}
		*/
//		문제1) 인덱스 마지막에 10의 값을 넣고 마지막 인덱스만 출력하시오.
//		int s = 정수형배열.length;
//		System.out.println(s);
//		인덱스 : 0 부터
//		크기 : 1 부터
		정수형배열[정수형배열.length-1] = 10;
		System.out.println(정수형배열[정수형배열.length-1]);
		
//		배열에 담긴 값 확인
//		for(int i=0; i<정수형배열.length; i++) {
//			System.out.println(정수형배열[i]);
//		}
	}
}

# 2차원 배열
package java0520;

public class Study05 {
		public static void main(String[] args) {
			/*
			int[][] 배열 = new int[4][5];
			
			배열[0][1] = 10;
			배열[2][2] = 20;
			배열[3][3] = 30;
			
			// i = 0,1,2,3
			for(int i=0; i<배열.length; i++) { // 배열의 크기: 4
//				System.out.println(배열[i][i]);
//				1 > [0][0] = 0
//				2 > [1][1] = 0
//				3 > [2][2] = 20
//				4 > [3][3] = 30
				for(int j=0; j<배열[i].length; j++) {
					System.out.print(배열[i][j] + "\t");
				}
				System.out.println();
			}
			
			System.out.println("================================================");
			*/
			/*
			String[][] 배열 = new String[3][3];
			
			for(int i=0; i<배열.length; i++) {
				for(int j=0; j<배열[i].length; j++) {
					if(j<(i+1)) {
						배열[i][j]="○";
					} else {
						배열[i][j]="x";
					}
					System.out.print(배열[i][j] + " ");
				}
				System.out.println();
			}
			*/
			
//			String[][] 배열 = new String[9][17];
			String[][] 배열 = new String[9][17];
			
			for(int i=1; i<배열.length; i++) {
				for(int j=0; j<배열[i].length; j++) {
					if(j%2 == 0) {
						if(j<i+1) {
							배열[i][j] = "8";
								
						} else {
							배열[i][j] = "3";
						}						
						System.out.print(배열[i][j]);
						System.out.print(" ");
					}
					
					
				}
				System.out.println("");
			}
		}
}
# 한국소프트웨어산업협회
- 응용SW개발 (개발자 단가 볼 수 있음)
