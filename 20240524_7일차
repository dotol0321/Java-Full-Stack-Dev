package java0524;
/***************** 클래스 **************/
// 다른 곳에서도 가져다 사용할 수 있어야 하기 때문에 class는 기본적으로 public이 붙음
// 부모(상하) 관계 / 형제(동등) 관계

public class Study05 {
	public static void main(String[] args) {
		
//		new Study05_1(); // <-- 생성자 실행 또는 호출 / new: 객체 생성
		Study05_1 s51 = new Study05_1(1); // 참조자료형의 객체 생성
		System.out.println(s51); // 참조자료형이기 때문에 주소값 출력
		s51.b();
//		s51 a; // 접근제어자 때문에 접근할 수 없음
				
	}
	
}

------------------------------------------------------------------------------------------------------------------------
package java0524;

public class Study05_1 {	
// 기본 생성자 (반환값이 없기 때문에 생성자라는 것을 구분할 수 있다)
// 클래스를 만들면 화면에 코드가 없어도 생성자는 기본적으로 있다고 생각하면 됨
// ㄴ 하지만 매개변수를 채운 생성자를 만들면, 기본생성자는 무시되기 때문에
// 기본생성자를 사용하려면 강제적으로 코드를 넣어주면 됨
	
	private int a;
	
	Study05_1() {
		System.out.println(1111);
	}
	
	Study05_1(int a) { // 매개변수를 채운 생성자를 만들면, 기본생성자는 무시됨.
		System.out.println(a);
		this.a = a; // 전역변수a = 지역변수a; <- 전역변수 선언과 이 코드로 인해 지역변수 a를 다른 메소드에서 사용할 수 있음. 
	}
	
	void b() {
		System.out.println(this.a);
	}
	
}
